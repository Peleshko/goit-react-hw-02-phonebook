{"version":3,"sources":["components/Filter/Filter.module.css","components/FormContact/FormContact.module.css","components/FormContact/FormContact.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/ContactList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","FormContact","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetState","className","s","form","this","label","input_name","type","pattern","onChange","title","required","input_number","button","btnText","Component","ContactListItem","contactName","contactNumber","onClickDeleteContact","listItem","listItemText","onClick","ContactList","contacts","onDeleteContact","map","id","Filter","filterInput","App","filter","addContact","newContact","nanoid","find","contact","alert","changeFilter","getVisibleContacts","toLowerCase","includes","deleteContact","contactId","prevState","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2f73594.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__GitVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__1MXZa\",\"label\":\"FormContact_label__4Vz_6\",\"input_name\":\"FormContact_input_name__2X9aq\",\"input_number\":\"FormContact_input_number__2ZY8N\",\"button\":\"FormContact_button__2lRmY\",\"btnText\":\"FormContact_btnText__3UtGR\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FormContact.module.css';\r\n\r\nclass FormContact extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n    this.props.onSubmit(name, number);\r\n    this.resetState();\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input_name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input_number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={s.button} type=\"submit\">\r\n          <span className={s.btnText}>Add contact</span>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({\r\n  contactName,\r\n  contactNumber,\r\n  onClickDeleteContact,\r\n}) => {\r\n  return (\r\n    <li className={s.listItem}>\r\n      <span className={s.listItemText}>{contactName}:</span>\r\n      <span className={s.listItemText}>{contactNumber}</span>\r\n      <button className={s.button} type=\"button\" onClick={onClickDeleteContact}>\r\n        Delete contact\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contactName: PropTypes.string.isRequired,\r\n  contactNumber: PropTypes.string.isRequired,\r\n  onClickDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactList/ContactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        contactName={name}\r\n        contactNumber={number}\r\n        onClickDeleteContact={() => onDeleteContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name{' '}\r\n    <input\r\n      className={s.filterInput}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport FormContact from '../FormContact';\r\nimport ContactList from '../ContactList';\r\nimport Filter from '../Filter';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    const { contacts } = this.state;\r\n    const newContact = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n    if (contacts.find(contact => contact.name === newContact.name)) {\r\n      return alert(`${newContact.name} is already n contacts!`);\r\n    }\r\n    if (contacts.find(contact => contact.number === newContact.number)) {\r\n      return alert(\r\n        `${newContact.number} is already belongs to another contact!`,\r\n      );\r\n    }\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [newContact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <FormContact onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__2MpOP\",\"listItemText\":\"ContactListItem_listItemText__3Ecik\",\"button\":\"ContactListItem_button__36yGH\"};"],"sourceRoot":""}